openapi: 2.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ltyiz07/ai_backend_test/1.0.0
  - description: test server (local host)
    url: http://localhost:5000
info:
  version: "1.0.0"
  title: AI-LAB backend subject
  description: AI-model evaluate back-end API
  contact:
    email: ltyiz07@gmail.com
paths:
  /challenges:
    get:
      summary: get list of challenges
      operationId: get_challenges
      description: get all challenges from api server.
      responses:
        '200':
          description: array of challenges
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/challenges'
        '400':
          description: check server status
  /challenges/{challenge_id}:
    get:
      summary: get challenge with challenge ID
      operationId: get_challenge
      description: get challenge info with challenge ID
      parameters:
        - in: path
          name: challenge_id
          description: id of challenge from file meta data
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/challenge'
        '400':
          description: bad input parameter
  /challenges/{challenge_id}/submissions:
    post:
      summary: submission model
      operationId: submit_model
      description: request evaluation of model to server
      parameters:
        - in: path
          name: challenge_id
          description: id of challenge from file meta data
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns submission info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submission_info'
        '400':
          description: bad input parameter
      requestBody:
        description: file to submit
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
    get:
      summary: get all status and results
      operationId: get_status_and_results
      description: get all status on progress and results
      parameters:
        - in: path
          name: challenge_id
          description: id of challenge from file meta data
          required: true
          schema:
            type: string
      responses:
        200:
          description: status and resuts Map(submission_id, object)
          content:
            application/json:
              schema:
                  allOf:
                    - $ref: '#/components/schemas/submission_result_obj'
                    - $ref: '#/components/schemas/submission_status_obj'


  /challenges/{challenge_id}/submissions/{submission_id}:
    get:
      summary: returns progress of evaluation or result
      operationId: get_status_or_result
      description: if evaluated returns result else returns progress
      parameters:
        - in: path
          name: challenge_id
          description: id of challenge from file meta data
          required: true
          schema:
            type: string
        - in: path
          name: submission_id
          description: id of submission on progress or done process
          required: true
          schema:
            type: string
      responses:
        '200':
          description: process done, returns result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submission_result'
        '202':
          description: on progress, returns status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/submission_status'
        '400':
          description: bad input parameter

components:
  schemas:
    challenges:
      type: array
      items:
        type: object
        properties:
          create_time:
            type: string
          title:
            type: string
          challenge_id:
            type: string
    challenge:
      type: array
      items:
        type: object
        properties:
          create_time:
            type: string
          title:
            type: string
          challenge_id:
            type: string
          metrics:
            type: array
            items:
              type: string
          content:
            type: string
    submission_info:
      type: object
      properties:
        submission_time:
          type: string
        submission_id:
          type: string
        challenge_id:
          type: string
    submission_result:
      type: object
      properties:
        result:
          type: object
        submission_time:
          type: string
    submission_status:
      type: object
      properties:
        status:
          type: string
        submission_time:
          type: string
    submission_result_obj:
      description: 'Map(submission_id: string, submission_result: object)'
      type: object
      additionalProperties:
          $ref: '#/components/schemas/submission_result'
    submission_status_obj:
      description: 'Map(submission_id: string, submission_status: object)'
      type: object
      additionalProperties:
        $ref: '#/components/schemas/submission_status'