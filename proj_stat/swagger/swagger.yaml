# openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ltyiz07/annotation_statistics/1.0.0
info:
  description: |
    This is simple api for get statistics annotations -> 
    http://HOSTNAME:5000/datasets/
  version: "1.0.0"
  title: Simple Annotation Statistics API
  contact:
    email: ltyiz07@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /datasets/:
    get:
      summary: get list of datasets
      operationId: get_datasets
      description: |
        get all datasets with listed tar files
      responses:
        '200':
          description: returns all .tar datasets from server
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
        '400':
          description: bad input parameter

  /datasets/{datasetId}/stats:
    get:
      summary: get statistics of specific dataset
      operationId: get_stats
      description: |
        returns statics about dataset (ex. number of images, number of obejcts ...)
      parameters:
        - name: datasetId
          in: path
          description: datasetId is filename of tarfile
          required: true
          schema:
            type: string
      responses:
        '200':
          description: matched tar id exists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
  
  /datasets/{datasetId}/stats/{imageId}:
    get:
      summary: get statistics of specific image
      operationId: get_stat
      description: |
        returns statistics of specific image (ex. number of objects, count of objects)
      parameters:
        - name: datasetId
          in: path
          description: .tar filename is datasetId
          required: true
          schema:
            type: string
        - name: imageId
          in: path
          description: name of image filename without format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: dataset and iamge all searched correnctly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'


  /datasets/{datasetId}/images:
    get:
      summary: load list of imageId from dataset optional image preview
      operationId: get_image_list
      description: |
        get images with imageId using ImageSets filename list
      parameters:
        - name: datasetId
          in: path
          description: .tar filename is id of dataset
          required: true
          schema:
            type: string
        - name: review
          in: query
          description: boolean value for request preview images
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: matched tar id exists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'


  /datasets/{datasetId}/images/{imageId}:
    get:
      summary: load image
      operationId: get_image
      description: |
       returns image file with image fileaname without format
      parameters: 
        - name: datasetId
          in: path
          description: .tar filename is datasetId
          required: true
          schema:
            type: string
        - name: imageId
          in: path
          description: name of image filename without format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: matched imageId exists
          content:
            image/jpeg:
              schema:
                type: string
                format: binary

components:
  schemas:
    Dataset:
      type: object
      required:
        - datasetId
      properties:
        datasetId:
          type: string
          example: GODTrain211111_test
    Image:
      type: object
      required:
        - imageId
      properties:
        imageId:
          type: string
          example: 1479498372942264998